openapi: 3.0.0
info:
  title: API Sample Blog
  version: 0.0.1
servers:
  - url: http://127.0.0.1:3000
    description: ローカル開発環境
paths:
  /login:
    put:
      summary: ログイン
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoginParams'
      responses:
        '200':
          description: 成功時のレスポンス.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLoginResponse'
  /logout:
    put:
      summary: ログアウト
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
          '200':
            description: OK
  /article:
    get:
      summary: 記事一覧取得
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 成功時のレスポンス.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArticlesResponse'
    post:
      summary: 新規投稿
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostArticleRequestParams'
      responses:
        '200':
          description: 成功時のレスポンス.
  /article/{id}:
    get:
      summary: 記事詳細取得
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 成功時のレスポンス.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArticleResponse'
    put:
      summary: 投稿内容の更新
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutArticleRequestParams'
      responses:
        '200':
          description: 成功時のレスポンス.
    delete:
      summary: 投稿の削除
      responses:
        '200':
          description: 成功時のレスポンス.
components:
   schemas:
    PutLoginParams:
      type: object
    PutLoginResponse:
      type: object
    GetArticlesResponse:
      type: object
    GetArticleResponse:
      type: object
    PostArticleRequestParams:
      type: object
    PutArticleRequestParams:
      type: object
